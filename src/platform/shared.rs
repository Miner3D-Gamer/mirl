use super::{time::NativeTime, Time};

#[inline(always)]
pub fn get_time() -> Box<(dyn Time + 'static)> {
    // Native environment: using SystemTime to get current time
    let now = std::time::Instant::now();
    return Box::new(NativeTime {
        time: now,
    });
}
#[inline(always)]
pub fn sample_fps<T: Time>(since: &T) -> (NativeTime, u64) {
    let deltatime = since.get_elapsed_time();
    (NativeTime::new(), deltatime)
}
#[inline(always)]
pub fn sleep(time: u64) {
    std::thread::sleep(std::time::Duration::from_millis(time));
}

#[inline(always)]
pub fn log<T: std::fmt::Debug>(t: T) {
    println!("{:#?}", t);
}

pub struct KeyManager {
    // Letters
    a: bool,
    b: bool,
    c: bool,
    d: bool,
    e: bool,
    f: bool,
    g: bool,
    h: bool,
    i: bool,
    j: bool,
    k: bool,
    l: bool,
    m: bool,
    n: bool,
    o: bool,
    p: bool,
    q: bool,
    r: bool,
    s: bool,
    t: bool,
    u: bool,
    v: bool,
    w: bool,
    x: bool,
    y: bool,
    z: bool,

    // Numbers
    num0: bool,
    num1: bool,
    num2: bool,
    num3: bool,
    num4: bool,
    num5: bool,
    num6: bool,
    num7: bool,
    num8: bool,
    num9: bool,
    key_pad0: bool,
    key_pad1: bool,
    key_pad2: bool,
    key_pad3: bool,
    key_pad4: bool,
    key_pad5: bool,
    key_pad6: bool,
    key_pad7: bool,
    key_pad8: bool,
    key_pad9: bool,

    // Function Keys
    f1: bool,
    f2: bool,
    f3: bool,
    f4: bool,
    f5: bool,
    f6: bool,
    f7: bool,
    f8: bool,
    f9: bool,
    f10: bool,
    f11: bool,
    f12: bool,
    f13: bool,
    f14: bool,
    f15: bool,
    f16: bool,
    f17: bool,
    f18: bool,
    f19: bool,
    f20: bool,
    f21: bool,
    f22: bool,
    f23: bool,
    f24: bool,

    // Modifiers
    left_shift: bool,
    right_shift: bool,
    left_control: bool,
    right_control: bool,
    left_alt: bool,
    right_alt: bool,
    left_super: bool,
    right_super: bool,

    // Symbols / Punctuation
    space: bool,
    enter: bool,
    escape: bool,
    backspace: bool,
    tab: bool,
    comma: bool,
    period: bool,
    minus: bool,
    equals: bool,
    left_bracket: bool,
    right_bracket: bool,
    backslash: bool,
    semicolon: bool,
    quote: bool,
    tilde: bool,
    slash: bool,
    grave: bool,

    // Arrow keys
    up: bool,
    down: bool,
    left: bool,
    right: bool,

    // Editing keys
    insert: bool,
    delete: bool,
    home: bool,
    end: bool,
    page_up: bool,
    page_down: bool,

    // Lock keys
    caps_lock: bool,
    num_lock: bool,
    scroll_lock: bool,

    // Keypad operations
    key_pad_divide: bool,
    key_pad_multiply: bool,
    key_pad_subtract: bool,
    key_pad_add: bool,
    key_pad_decimal: bool,
    key_pad_enter: bool,

    // International & special characters
    ä: bool,
    ü: bool,
    ö: bool,
    ss: bool,
    â: bool,
    ú: bool,
    ô: bool,
    î: bool,
    ê: bool,
    ð: bool,
    œ: bool,
    á: bool,
    ý: bool,
    ï: bool,
    ñ: bool,
    ò: bool,
    é: bool,
    å: bool,
    æ: bool,
    ø: bool,
    í: bool,
    þ: bool,

    // Multimedia keys
    media_play_pause: bool,
    media_stop: bool,
    media_next: bool,
    media_prev: bool,
    volume_up: bool,
    volume_down: bool,
    mute: bool,

    // Browser/OS keys
    browser_back: bool,
    browser_forward: bool,
    browser_refresh: bool,
    browser_home: bool,
    launch_mail: bool,
    launch_app1: bool,
    launch_app2: bool,

    // Platform-specific
    menu: bool,
    print_screen: bool,
    pause: bool,
    application: bool,
}

use super::KeyCode;

pub const fn map_keycode(keycode: KeyCode, keymanager: KeyManager) -> bool {
    match keycode {
        KeyCode::A => keymanager.a,
        KeyCode::B => keymanager.b,
        KeyCode::C => keymanager.c,
        KeyCode::D => keymanager.d,
        KeyCode::E => keymanager.e,
        KeyCode::F => keymanager.f,
        KeyCode::G => keymanager.g,
        KeyCode::H => keymanager.h,
        KeyCode::I => keymanager.i,
        KeyCode::J => keymanager.j,
        KeyCode::K => keymanager.k,
        KeyCode::L => keymanager.l,
        KeyCode::M => keymanager.m,
        KeyCode::N => keymanager.n,
        KeyCode::O => keymanager.o,
        KeyCode::P => keymanager.p,
        KeyCode::Q => keymanager.q,
        KeyCode::R => keymanager.r,
        KeyCode::S => keymanager.s,
        KeyCode::T => keymanager.t,
        KeyCode::U => keymanager.u,
        KeyCode::V => keymanager.v,
        KeyCode::W => keymanager.w,
        KeyCode::X => keymanager.x,
        KeyCode::Y => keymanager.y,
        KeyCode::Z => keymanager.z,
        KeyCode::Num0 => keymanager.num0,
        KeyCode::Num1 => keymanager.num1,
        KeyCode::Num2 => keymanager.num2,
        KeyCode::Num3 => keymanager.num3,
        KeyCode::Num4 => keymanager.num4,
        KeyCode::Num5 => keymanager.num5,
        KeyCode::Num6 => keymanager.num6,
        KeyCode::Num7 => keymanager.num7,
        KeyCode::Num8 => keymanager.num8,
        KeyCode::Num9 => keymanager.num9,
        KeyCode::KeyPad0 => keymanager.key_pad0,
        KeyCode::KeyPad1 => keymanager.key_pad1,
        KeyCode::KeyPad2 => keymanager.key_pad2,
        KeyCode::KeyPad3 => keymanager.key_pad3,
        KeyCode::KeyPad4 => keymanager.key_pad4,
        KeyCode::KeyPad5 => keymanager.key_pad5,
        KeyCode::KeyPad6 => keymanager.key_pad6,
        KeyCode::KeyPad7 => keymanager.key_pad7,
        KeyCode::KeyPad8 => keymanager.key_pad8,
        KeyCode::KeyPad9 => keymanager.key_pad9,
        KeyCode::F1 => keymanager.f1,
        KeyCode::F2 => keymanager.f2,
        KeyCode::F3 => keymanager.f3,
        KeyCode::F4 => keymanager.f4,
        KeyCode::F5 => keymanager.f5,
        KeyCode::F6 => keymanager.f6,
        KeyCode::F7 => keymanager.f7,
        KeyCode::F8 => keymanager.f8,
        KeyCode::F9 => keymanager.f9,
        KeyCode::F10 => keymanager.f10,
        KeyCode::F11 => keymanager.f11,
        KeyCode::F12 => keymanager.f12,
        KeyCode::F13 => keymanager.f13,
        KeyCode::F14 => keymanager.f14,
        KeyCode::F15 => keymanager.f15,
        KeyCode::F16 => keymanager.f16,
        KeyCode::F17 => keymanager.f17,
        KeyCode::F18 => keymanager.f18,
        KeyCode::F19 => keymanager.f19,
        KeyCode::F20 => keymanager.f20,
        KeyCode::F21 => keymanager.f21,
        KeyCode::F22 => keymanager.f22,
        KeyCode::F23 => keymanager.f23,
        KeyCode::F24 => keymanager.f24,
        KeyCode::Application => keymanager.application,
        KeyCode::Escape => keymanager.escape,
        KeyCode::Enter => keymanager.enter,
        KeyCode::Backspace => keymanager.backspace,
        KeyCode::Tab => keymanager.tab,
        KeyCode::Space => keymanager.space,
        KeyCode::Minus => keymanager.minus,
        KeyCode::Equals => keymanager.equals,
        KeyCode::LeftBracket => keymanager.left_bracket,
        KeyCode::RightBracket => keymanager.right_bracket,
        KeyCode::Backslash => keymanager.backslash,
        KeyCode::Semicolon => keymanager.semicolon,
        KeyCode::Grave => keymanager.grave,
        KeyCode::Comma => keymanager.comma,
        KeyCode::Period => keymanager.period,
        KeyCode::Slash => keymanager.slash,
        KeyCode::CapsLock => keymanager.caps_lock,
        KeyCode::ScrollLock => keymanager.scroll_lock,
        KeyCode::NumLock => keymanager.num_lock,
        KeyCode::BrowserBack => keymanager.browser_back,
        KeyCode::BrowserForward => keymanager.browser_forward,
        KeyCode::KeyPadAdd => keymanager.key_pad_add,
        KeyCode::KeyPadSubtract => keymanager.key_pad_subtract,
        KeyCode::KeyPadMultiply => keymanager.key_pad_multiply,
        KeyCode::KeyPadDivide => keymanager.key_pad_divide,
        KeyCode::KeyPadEnter => keymanager.key_pad_enter,
        KeyCode::KeyPadDecimal => keymanager.key_pad_decimal,
        KeyCode::LeftShift => keymanager.left_shift,
        KeyCode::LeftControl => keymanager.left_control,
        KeyCode::LeftAlt => keymanager.left_alt,
        KeyCode::LeftSuper => keymanager.left_super,
        KeyCode::RightShift => keymanager.right_shift,
        KeyCode::RightControl => keymanager.right_control,
        KeyCode::RightAlt => keymanager.right_alt,
        KeyCode::RightSuper => keymanager.right_super,
        KeyCode::Menu => keymanager.menu,
        KeyCode::Quote => keymanager.quote,
        KeyCode::Tilde => keymanager.tilde,
        KeyCode::Up => keymanager.up,
        KeyCode::Down => keymanager.down,
        KeyCode::Left => keymanager.left,
        KeyCode::Right => keymanager.right,
        KeyCode::PageUp => keymanager.page_up,
        KeyCode::PageDown => keymanager.page_down,
        KeyCode::Home => keymanager.home,
        KeyCode::End => keymanager.end,
        KeyCode::Insert => keymanager.insert,
        KeyCode::Delete => keymanager.delete,

        KeyCode::Ä => keymanager.ä,

        KeyCode::Ê => keymanager.é,
        KeyCode::Ô => keymanager.ö,
        KeyCode::Ù => keymanager.ü,
        KeyCode::Å => keymanager.å,
        KeyCode::Æ => keymanager.æ,
        KeyCode::Ø => keymanager.ø,
        KeyCode::Ü => keymanager.ü,
        KeyCode::Ì => keymanager.í,
        KeyCode::BrowserHome => keymanager.browser_home,
        KeyCode::BrowserRefresh => keymanager.browser_refresh,
        KeyCode::LaunchApp1 => keymanager.launch_app1,
        KeyCode::LaunchApp2 => keymanager.launch_app2,
        KeyCode::LaunchMail => keymanager.launch_mail,
        KeyCode::MediaNext => keymanager.media_next,
        KeyCode::MediaPlayPause => keymanager.media_play_pause,
        KeyCode::MediaPrev => keymanager.media_prev,
        KeyCode::MediaStop => keymanager.media_stop,
        KeyCode::Mute => keymanager.mute,
        KeyCode::PrintScreen => keymanager.print_screen,
        KeyCode::SS => keymanager.ss,
        KeyCode::VolumeDown => keymanager.volume_down,
        KeyCode::VolumeUp => keymanager.volume_up,
        KeyCode::Á => keymanager.á,
        KeyCode::Â => keymanager.â,
        KeyCode::Î => keymanager.î,
        KeyCode::Ï => keymanager.ï,
        KeyCode::Ð => keymanager.ð,
        KeyCode::Ñ => keymanager.ñ,
        KeyCode::Ò => keymanager.ò,
        KeyCode::Ö => keymanager.ö,
        KeyCode::Ú => keymanager.ú,
        KeyCode::Ý => keymanager.ý,
        KeyCode::Þ => keymanager.þ,
        KeyCode::Œ => keymanager.œ,

        KeyCode::Pause => keymanager.pause,
    }
}
